---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, date, description, updated, heroImage } = Astro.props;

function formatDate(date: string) {
	return new Date(date).toLocaleDateString("en-au", {
		year: "numeric",
		month: "long",
		day: "numeric"
	});
}
---

<html lang="en">
    <head>
        <BaseHead title={title} description={description} />
        <style>
            main {
                width: calc(100% - 2em);
                max-width: 100%;
                margin: 0;
            }
            .hero-image img {
                display: block;
                margin: 0 auto;
                border-radius: 12px;
                box-shadow: var(--box-shadow);
            }
            .prose {
                width: 760px;
                max-width: calc(100% - 1.5em);
                margin: auto;
                padding: 1em;
                color: rgb(var(--gray-dark));
            }
            .title {
                margin-bottom: 1em;
                text-align: center;
            }
            .title p {
                margin: 0.5em 0 1em 0;
                color: rgb(var(--gray));
            }
            .date {
                font-size: 0.8em;
                color: rgb(var(--gray));
            }
            .updated {
                font-size: 0.8em;
                color: rgb(var(--gray));
            }
        </style>
    </head>

    <body>
        <Header />
        <main>
            <article>
                <div class="hero-image">{heroImage && <img src={heroImage} alt={title} />}</div>
                <div class="prose">
                    <div class="title">
                        <h2>{title}</h2>
                        <p>{description}</p>
                        <hr />
                    </div>
                    <slot />
                    <div class="date">Published: {formatDate(date.toISOString())}</div>
                    {updated && <div class="updated">Updated: {formatDate(updated.toISOString())}</div>}
                </div>
            </article>
        </main>
        <Footer />
    </body>
</html>
